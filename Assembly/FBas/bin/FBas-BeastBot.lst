
; 64tass Turbo Assembler Macro V1.55.2200 listing file
; 64tass.exe --long-address --flat -b --m65816 -oFBas\bin\FBas.pgx --list=FBas\bin\FBas.lst --labels=FBas\bin\FBas.lbl .\FBas\FBas.asm
; Tue Feb 16 15:35:57 2021

;Offset	;Hex		;Monitor	;Source

;******  Processing input file: .\FBas\FBas.asm


;******  Processing file: .\FBas\../Common/PGX.asm

>2000	50 47 58			               .text "PGX"
>2003	01				               .byte $01
>2004	08 20 00 00			               .dword START

;******  Return to file: .\FBas\FBas.asm


;******  Processing file: .\FBas\../Common/Macros.asm


;******  Return to file: .\FBas\FBas.asm


;******  Processing file: .\FBas\../Common/Kernel.asm

=$00101c				PUTS                    = $00101C              ; Print a string to the currently selected channel
=$001018				PUTC                    = $001018
=$00106c				PRINTCR                 = $00106C
=$001080				PRINTAH                 = $001080
=$001078				FK_IPRINTH              = $001078
=$001084				LOCATE                  = $001084
=$00112c				FK_SETSIZES             = $00112C
=$00001e				CUR_COLOR               = $00001E
=$af0004				BORDER_CTRL_REG	        = $AF0004
=$afa000				SCREEN_TEXT_MEM         = $AFA000
=$afc000				SCREEN_TEXT_COL         = $AFC000
=80					NUM_COLS                = 80
=60					NUM_ROWS                = 60

;******  Return to file: .\FBas\FBas.asm

.2008					START
.2008	20 33 20	jsr $2033	            JSR SETUP
.200b	20 6f 20	jsr $206f	            JSR TOKENIZE
.200e	6b		rtl		        RTL

;******  Processing file: .\FBas\../Common/Common.asm

.200f					RESET_SCREEN:
.200f	e2 20		sep #$20	            SEP #$20
.2011	c2 10		rep #$10	            REP #$10
.2013	a2 00 00	ldx #$0000	        LDX #0
.2016	a9 20		lda #$20	-       LDA #' '
.2018	9f 00 a0 af	sta $afa000,x	        STA @l SCREEN_TEXT_MEM, X
.201c	a9 20		lda #$20	        LDA #TEXT_COLOR
.201e	9f 00 c0 af	sta $afc000,x	        STA @l SCREEN_TEXT_COL, X
.2022	e8		inx		        INX
.2023	e0 c0 12	cpx #$12c0	        CPX #(NUM_COLS * NUM_ROWS)
.2026	d0 ee		bne $2016	        BNE -
.2028	a2 00 00	ldx #$0000	        LDX #0
.202b	a0 00 00	ldy #$0000	        LDY #0
.202e	22 84 10 00	jsl $001084	        JSL LOCATE
.2032	60		rts		            RTS
.2033					SETUP:
.2033	18		clc		        CLC                         ; Make sure we're native mode
.2034	fb		xce		        XCE
.2035	e2 20		sep #$20	            SEP #$20
.2037	c2 10		rep #$10	            REP #$10
.2039	a9 20		lda #$20	        LDA #TEXT_COLOR            ; Set the Text Color (Green Text on Black Background)
.203b	8f 1e 00 00	sta $00001e	        STA @lCUR_COLOR             ; @l forces 24 bit addressing mode...
.203f	a9 00		lda #$00	        LDA #$00                    ; Set to No Border
.2041	8f 04 00 af	sta $af0004	        STA @lBORDER_CTRL_REG
.2045	22 2c 11 00	jsl $00112c	        JSL FK_SETSIZES
.2049	20 0f 20	jsr $200f	            JSR RESET_SCREEN
.204c	60		rts		            RTS

;******  Return to file: .\FBas\FBas.asm


;******  Processing file: .\FBas\Common.asm


;******  Return to file: .\FBas\FBas.asm


;******  Processing file: .\FBas\Tokenize.asm


;******  Processing file: .\FBas\IsFunctions.asm

.204d	8d 6d 21	sta $216d	IS_CHAR:        STA COMPARE_TEMP
.2050	20 62 20	jsr $2062	                JSR IS_LOWER_CHAR
.2053	b0 06		bcs $205b	                BCS +
.2055	ad 6d 21	lda $216d	                LDA COMPARE_TEMP
.2058	20 5c 20	jsr $205c	                JSR IS_UPPER_CHAR
.205b					+
.205b	60		rts		            RTS
.205c	18		clc		IS_UPPER_CHAR:  CLC
.205d	69 a5		adc #$a5	                ADC #$FF - 'Z'
.205f	69 1a		adc #$1a	                ADC #('Z' - 'A') + 1
.2061	60		rts		            RTS
.2062	18		clc		IS_LOWER_CHAR:  CLC
.2063	69 85		adc #$85	                ADC #$FF - 'z'
.2065	69 1a		adc #$1a	                ADC #('z' - 'a') + 1
.2067	60		rts		            RTS
.2068					IS_PRINTABLE_CHAR:
.2068	38		sec		                SEC
.2069	c9 0d		cmp #$0d	                CMP #13
.206b	d0 01		bne $206e	                BNE +
.206d	18		clc		                CLC
.206e					+
.206e	60		rts		            RTS

;******  Return to file: .\FBas\Tokenize.asm

.206f					TOKENIZE:
.206f	c2 10		rep #$10	            REP #$10
.2071	a2 00 00	ldx #$0000	        LDX #0
.2074	8e 6b 21	stx $216b	        STX SOURCE_POS
.2077	e2 20		sep #$20	            SEP #$20
.2079	bd 2d 21	lda $212d,x	        LDA SOURCE, X
.207c	8d 6e 21	sta $216e	        STA CURRENT_CHAR
.207f					TOKENIZE_LOOP:
.207f	c2 20		rep #$20	            REP #$20
.2081	ad 6b 21	lda $216b	        LDA SOURCE_POS
.2084	22 80 10 00	jsl $001080	        JSL PRINTAH
.2088	e2 20		sep #$20	            SEP #$20
.208a	a9 2d		lda #$2d	        LDA #'-'
.208c	22 18 10 00	jsl $001018	        JSL PUTC
.2090	e2 20		sep #$20	            SEP #$20
.2092	ad 6e 21	lda $216e	        LDA CURRENT_CHAR
.2095	22 80 10 00	jsl $001080	        JSL PRINTAH
.2099	e2 20		sep #$20	            SEP #$20
.209b	a9 2d		lda #$2d	        LDA #'-'
.209d	22 18 10 00	jsl $001018	        JSL PUTC
.20a1	e2 20		sep #$20	            SEP #$20
.20a3	ad 6e 21	lda $216e	        LDA CURRENT_CHAR
.20a6	20 68 20	jsr $2068	        JSR IS_PRINTABLE_CHAR
.20a9	90 1b		bcc $20c6	        BCC +
.20ab	e2 20		sep #$20	            SEP #$20
.20ad	a9 27		lda #$27	        LDA #''''
.20af	22 18 10 00	jsl $001018	        JSL PUTC
.20b3	e2 20		sep #$20	            SEP #$20
.20b5	ad 6e 21	lda $216e	        LDA CURRENT_CHAR
.20b8	22 18 10 00	jsl $001018	        JSL PUTC
.20bc	e2 20		sep #$20	            SEP #$20
.20be	a9 27		lda #$27	        LDA #''''
.20c0	22 18 10 00	jsl $001018	        JSL PUTC
.20c4	80 13		bra $20d9	        BRA ++
.20c6					+
.20c6	c2 30		rep #$30	            REP #$30
.20c8	08		php		            PHP
.20c9	e2 20		sep #$20	            SEP #$20
.20cb	48		pha		            PHA
.20cc	a9 00		lda #$00	            LDA #`NON_PRINTABLE_CHAR
.20ce	48		pha		            PHA
.20cf	ab		plb		            PLB
.20d0	68		pla		            PLA
.20d1	28		plp		            PLP
.20d2	a2 67 21	ldx #$2167	                LDX #<>NON_PRINTABLE_CHAR               ; Point to the message in an ASCIIZ string
.20d5	22 1c 10 00	jsl $00101c	                JSL PUTS                 ; And ask the kernel to print it
.20d9					+
.20d9	e2 20		sep #$20	            SEP #$20
.20db	a9 2d		lda #$2d	        LDA #'-'
.20dd	22 18 10 00	jsl $001018	        JSL PUTC
.20e1	e2 20		sep #$20	            SEP #$20
.20e3	ad 6e 21	lda $216e	        LDA CURRENT_CHAR
.20e6	20 4d 20	jsr $204d	        JSR IS_CHAR
.20e9	90 15		bcc $2100	        BCC +
.20eb	c2 30		rep #$30	            REP #$30
.20ed	08		php		            PHP
.20ee	e2 20		sep #$20	            SEP #$20
.20f0	48		pha		            PHA
.20f1	a9 00		lda #$00	            LDA #`CHAR_MSG
.20f3	48		pha		            PHA
.20f4	ab		plb		            PLB
.20f5	68		pla		            PLA
.20f6	28		plp		            PLP
.20f7	a2 5d 21	ldx #$215d	                LDX #<>CHAR_MSG               ; Point to the message in an ASCIIZ string
.20fa	22 1c 10 00	jsl $00101c	                JSL PUTS                 ; And ask the kernel to print it
.20fe	80 13		bra $2113	        BRA ++
.2100					+
.2100	c2 30		rep #$30	            REP #$30
.2102	08		php		            PHP
.2103	e2 20		sep #$20	            SEP #$20
.2105	48		pha		            PHA
.2106	a9 00		lda #$00	            LDA #`NOT_CHAR_MSG
.2108	48		pha		            PHA
.2109	ab		plb		            PLB
.210a	68		pla		            PLA
.210b	28		plp		            PLP
.210c	a2 4d 21	ldx #$214d	                LDX #<>NOT_CHAR_MSG               ; Point to the message in an ASCIIZ string
.210f	22 1c 10 00	jsl $00101c	                JSL PUTS                 ; And ask the kernel to print it
.2113					+
.2113	22 6c 10 00	jsl $00106c	        JSL PRINTCR
.2117	c2 20		rep #$20	            REP #$20
.2119	ee 6b 21	inc $216b	        INC SOURCE_POS                  ; Update the Counter
.211c	ae 6b 21	ldx $216b	        LDX SOURCE_POS
.211f	e2 20		sep #$20	            SEP #$20
.2121	bd 2d 21	lda $212d,x	        LDA SOURCE, X
.2124	f0 06		beq $212c	        BEQ +                           ; Hit NULL
.2126	8d 6e 21	sta $216e	        STA CURRENT_CHAR
.2129	4c 7f 20	jmp $207f	        JMP TOKENIZE_LOOP
.212c					+
.212c	60		rts		            RTS

;******  Return to file: .\FBas\FBas.asm


;******  Processing file: .\FBas\Globals.asm

=$20					TEXT_COLOR              = $20
>212d	4c 61 62 65 6c 3a 0d 76		SOURCE:         .NULL "Label:", 13, "var1 = 100", 13, "var2 = 'test'"
>2135	61 72 31 20 3d 20 31 30 30 0d 76 61 72 32 20 3d
>2145	20 27 74 65 73 74 27 00
>214d	4e 6f 74 20 61 20 63 68		NOT_CHAR_MSG:   .NULL "Not a character"
>2155	61 72 61 63 74 65 72 00
>215d	43 68 61 72 61 63 74 65		CHAR_MSG:       .NULL "Character"
>2165	72 00
>2167	27 3f 27 00			NON_PRINTABLE_CHAR: .NULL "'?'"
>216b					SOURCE_POS:     .WORD ?
>216d					COMPARE_TEMP:   .BYTE ?
>216e					CURRENT_CHAR:   .BYTE ?

;******  Return to file: .\FBas\FBas.asm


;******  End of listing
