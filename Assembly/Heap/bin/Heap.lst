
; 64tass Turbo Assembler Macro V1.55.2200 listing file
; 64tass.exe --long-address --flat -b --m65816 -oHeap\bin\Heap.pgx --list=Heap\bin\Heap.lst --labels=Heap\bin\Heap.lbl .\Heap\Heap.asm
; Fri Feb 19 14:09:54 2021

;Offset	;Hex		;Monitor	;Source

;******  Processing input file: .\Heap\Heap.asm

=$0f0000				HEAP_PAGE_START = $0F0000
=$0fffff				HEAP_PAGE_END   = $0FFFFF
=$20					TEXT_COLOR              = $20

;******  Processing file: .\Heap\../Common/PGX.asm

>0e0000	50 47 58			               .text "PGX"
>0e0003	01				               .byte $01
>0e0004	08 00 0e 00			               .dword START

;******  Return to file: .\Heap\Heap.asm


;******  Processing file: .\Heap\../Common/Macros.asm


;******  Return to file: .\Heap\Heap.asm


;******  Processing file: .\Heap\../Common/Kernel.asm

=$00101c				PUTS                    = $00101C              ; Print a string to the currently selected channel
=$001018				PUTC                    = $001018
=$00106c				PRINTCR                 = $00106C
=$001080				PRINTAH                 = $001080
=$001078				FK_IPRINTH              = $001078
=$001084				LOCATE                  = $001084
=$00112c				FK_SETSIZES             = $00112C
=$00001e				CUR_COLOR               = $00001E
=$af0004				BORDER_CTRL_REG	        = $AF0004
=$afa000				SCREEN_TEXT_MEM         = $AFA000
=$afc000				SCREEN_TEXT_COL         = $AFC000
=80					NUM_COLS                = 80
=60					NUM_ROWS                = 60

;******  Return to file: .\Heap\Heap.asm

.0e0008					START:
.0e0008	20 33 01	jsr $0e0133	            JSR SETUP
.0e000b	c2 30		rep #$30	            REP #$30
.0e000d	08		php		            PHP
.0e000e	e2 20		sep #$20	            SEP #$20
.0e0010	48		pha		            PHA
.0e0011	a9 0e		lda #$0e	            LDA #`MSG_WELCOME
.0e0013	48		pha		            PHA
.0e0014	ab		plb		            PLB
.0e0015	68		pla		            PLA
.0e0016	28		plp		            PLP
.0e0017	a2 ec 01	ldx #$01ec	                LDX #<>MSG_WELCOME               ; Point to the message in an ASCIIZ string
.0e001a	22 1c 10 00	jsl $00101c	                JSL PUTS                 ; And ask the kernel to print it
.0e001e	80 06		bra $0e0026	    BRA +
.0e0020	20 27 00	jsr $0e0027	            JSR UNIT_TEST_HEAP_MANAGER_INIT
.0e0023	20 c6 00	jsr $0e00c6	            JSR UNIT_TEST_HEAP_MANAGER_RESET_CURRENT_BLOCK
.0e0026	6b		rtl		+   RTL
.0e0027					UNIT_TEST_HEAP_MANAGER_INIT
.0e0027	e2 20		sep #$20	            SEP #$20
.0e0029	c2 10		rep #$10	            REP #$10
.0e002b	a9 0f		lda #$0f	    LDA #`HEAP_PAGE_START
.0e002d	a2 00 00	ldx #$0000	    LDX #<>HEAP_PAGE_START
.0e0030	a0 ff ff	ldy #$ffff	    LDY #<>HEAP_PAGE_END
.0e0033	20 4d 01	jsr $0e014d	            JSR HEAP_MANAGER_INIT
.0e0036	c2 20		rep #$20	            REP #$20
.0e0038	a9 00 00	lda #$0000	    LDA #<>HEAP_PAGE_START
.0e003b	8d 63 02	sta $0e0263	    STA MY_HEAP_MANAGER
.0e003e	e2 20		sep #$20	            SEP #$20
.0e0040	a9 0f		lda #$0f	    LDA #`HEAP_PAGE_START
.0e0042	8d 65 02	sta $0e0265	    STA MY_HEAP_MANAGER + 2
.0e0045	c2 30		rep #$30	            REP #$30
.0e0047	08		php		            PHP
.0e0048	e2 20		sep #$20	            SEP #$20
.0e004a	48		pha		            PHA
.0e004b	a9 0e		lda #$0e	            LDA #`MSG_UNIT_TEST_HEAP_MANAGER_INIT
.0e004d	48		pha		            PHA
.0e004e	ab		plb		            PLB
.0e004f	68		pla		            PLA
.0e0050	28		plp		            PLP
.0e0051	a2 0a 02	ldx #$020a	                LDX #<>MSG_UNIT_TEST_HEAP_MANAGER_INIT               ; Point to the message in an ASCIIZ string
.0e0054	22 1c 10 00	jsl $00101c	                JSL PUTS                 ; And ask the kernel to print it
.0e0058	e2 20		sep #$20	            SEP #$20
.0e005a	a0 02 00	ldy #$0002	    LDY #HEAP_MANAGER_HEADER.HEAP_MANAGER_START + 2
.0e005d	b7 a0		lda [$a0],y	    LDA [ZP_HEAP_MANAGER_HEADER_POINTER], Y
.0e005f	c9 0f		cmp #$0f	    CMP #`HEAP_PAGE_START
.0e0061	d0 4f		bne $0e00b2	    BNE FAILED
.0e0063	c2 20		rep #$20	            REP #$20
.0e0065	a0 00 00	ldy #$0000	    LDY #HEAP_MANAGER_HEADER.HEAP_MANAGER_START
.0e0068	b7 a0		lda [$a0],y	    LDA [ZP_HEAP_MANAGER_HEADER_POINTER], Y
.0e006a	c9 00 00	cmp #$0000	    CMP #<>HEAP_PAGE_START
.0e006d	d0 43		bne $0e00b2	    BNE FAILED
.0e006f	e2 20		sep #$20	            SEP #$20
.0e0071	a0 05 00	ldy #$0005	    LDY #HEAP_MANAGER_HEADER.HEAP_MANAGER_END + 2
.0e0074	b7 a0		lda [$a0],y	    LDA [ZP_HEAP_MANAGER_HEADER_POINTER], Y
.0e0076	c9 0f		cmp #$0f	    CMP #`HEAP_PAGE_END
.0e0078	d0 38		bne $0e00b2	    BNE FAILED
.0e007a	c2 20		rep #$20	            REP #$20
.0e007c	a0 03 00	ldy #$0003	    LDY #HEAP_MANAGER_HEADER.HEAP_MANAGER_END
.0e007f	b7 a0		lda [$a0],y	    LDA [ZP_HEAP_MANAGER_HEADER_POINTER], Y
.0e0081	c9 ff ff	cmp #$ffff	    CMP #<>HEAP_PAGE_END
.0e0084	d0 2c		bne $0e00b2	    BNE FAILED
.0e0086	e2 20		sep #$20	            SEP #$20
.0e0088	a0 0a 00	ldy #$000a	    LDY #HEAP_MANAGER_HEADER.HEAP_FIRST_BLOCK_HEADER + 2
.0e008b	b7 a0		lda [$a0],y	    LDA [ZP_HEAP_MANAGER_HEADER_POINTER], Y
.0e008d	c9 0f		cmp #$0f	    CMP #`HEAP_PAGE_START
.0e008f	d0 21		bne $0e00b2	    BNE FAILED
.0e0091	c2 20		rep #$20	            REP #$20
.0e0093	a0 08 00	ldy #$0008	    LDY #HEAP_MANAGER_HEADER.HEAP_FIRST_BLOCK_HEADER
.0e0096	b7 a0		lda [$a0],y	    LDA [ZP_HEAP_MANAGER_HEADER_POINTER], Y
.0e0098	c9 0d 00	cmp #$000d	    CMP #(<>HEAP_PAGE_END + SIZE(HEAP_MANAGER_HEADER))
.0e009b	d0 15		bne $0e00b2	    BNE FAILED
.0e009d	c2 30		rep #$30	            REP #$30
.0e009f	08		php		            PHP
.0e00a0	e2 20		sep #$20	            SEP #$20
.0e00a2	48		pha		            PHA
.0e00a3	a9 0e		lda #$0e	            LDA #`MSG_PASSED
.0e00a5	48		pha		            PHA
.0e00a6	ab		plb		            PLB
.0e00a7	68		pla		            PLA
.0e00a8	28		plp		            PLP
.0e00a9	a2 53 02	ldx #$0253	                LDX #<>MSG_PASSED               ; Point to the message in an ASCIIZ string
.0e00ac	22 1c 10 00	jsl $00101c	                JSL PUTS                 ; And ask the kernel to print it
.0e00b0	80 13		bra $0e00c5	    BRA +
.0e00b2					FAILED:
.0e00b2	c2 30		rep #$30	            REP #$30
.0e00b4	08		php		            PHP
.0e00b5	e2 20		sep #$20	            SEP #$20
.0e00b7	48		pha		            PHA
.0e00b8	a9 0e		lda #$0e	            LDA #`MSG_FAILED
.0e00ba	48		pha		            PHA
.0e00bb	ab		plb		            PLB
.0e00bc	68		pla		            PLA
.0e00bd	28		plp		            PLP
.0e00be	a2 5b 02	ldx #$025b	                LDX #<>MSG_FAILED               ; Point to the message in an ASCIIZ string
.0e00c1	22 1c 10 00	jsl $00101c	                JSL PUTS                 ; And ask the kernel to print it
.0e00c5					+
.0e00c5	60		rts		            RTS
.0e00c6					UNIT_TEST_HEAP_MANAGER_RESET_CURRENT_BLOCK
.0e00c6	e2 20		sep #$20	            SEP #$20
.0e00c8	c2 10		rep #$10	            REP #$10
.0e00ca	ad 65 02	lda $0e0265	    LDA MY_HEAP_MANAGER + 2
.0e00cd	ae 63 02	ldx $0e0263	    LDX MY_HEAP_MANAGER
.0e00d0	20 be 01	jsr $0e01be	            JSR HEAP_MANAGER_RESET_CURRENT_BLOCK
.0e00d3	c2 30		rep #$30	            REP #$30
.0e00d5	08		php		            PHP
.0e00d6	e2 20		sep #$20	            SEP #$20
.0e00d8	48		pha		            PHA
.0e00d9	a9 0e		lda #$0e	            LDA #`MSG_UNIT_TEST_HEAP_MANAGER_RESET_CURRENT_BLOCK
.0e00db	48		pha		            PHA
.0e00dc	ab		plb		            PLB
.0e00dd	68		pla		            PLA
.0e00de	28		plp		            PLP
.0e00df	a2 27 02	ldx #$0227	                LDX #<>MSG_UNIT_TEST_HEAP_MANAGER_RESET_CURRENT_BLOCK               ; Point to the message in an ASCIIZ string
.0e00e2	22 1c 10 00	jsl $00101c	                JSL PUTS                 ; And ask the kernel to print it
.0e00e6	c2 30		rep #$30	            REP #$30
.0e00e8	08		php		            PHP
.0e00e9	e2 20		sep #$20	            SEP #$20
.0e00eb	48		pha		            PHA
.0e00ec	a9 0e		lda #$0e	            LDA #`MSG_PASSED
.0e00ee	48		pha		            PHA
.0e00ef	ab		plb		            PLB
.0e00f0	68		pla		            PLA
.0e00f1	28		plp		            PLP
.0e00f2	a2 53 02	ldx #$0253	                LDX #<>MSG_PASSED               ; Point to the message in an ASCIIZ string
.0e00f5	22 1c 10 00	jsl $00101c	                JSL PUTS                 ; And ask the kernel to print it
.0e00f9	80 13		bra $0e010e	    BRA +
.0e00fb					FAILED:
.0e00fb	c2 30		rep #$30	            REP #$30
.0e00fd	08		php		            PHP
.0e00fe	e2 20		sep #$20	            SEP #$20
.0e0100	48		pha		            PHA
.0e0101	a9 0e		lda #$0e	            LDA #`MSG_FAILED
.0e0103	48		pha		            PHA
.0e0104	ab		plb		            PLB
.0e0105	68		pla		            PLA
.0e0106	28		plp		            PLP
.0e0107	a2 5b 02	ldx #$025b	                LDX #<>MSG_FAILED               ; Point to the message in an ASCIIZ string
.0e010a	22 1c 10 00	jsl $00101c	                JSL PUTS                 ; And ask the kernel to print it
.0e010e					+
.0e010e	60		rts		            RTS

;******  Processing file: .\Heap\../Common/Common.asm

.0e010f					RESET_SCREEN:
.0e010f	e2 20		sep #$20	            SEP #$20
.0e0111	c2 10		rep #$10	            REP #$10
.0e0113	a2 00 00	ldx #$0000	        LDX #0
.0e0116	a9 20		lda #$20	-       LDA #' '
.0e0118	9f 00 a0 af	sta $afa000,x	        STA @l SCREEN_TEXT_MEM, X
.0e011c	a9 20		lda #$20	        LDA #TEXT_COLOR
.0e011e	9f 00 c0 af	sta $afc000,x	        STA @l SCREEN_TEXT_COL, X
.0e0122	e8		inx		        INX
.0e0123	e0 c0 12	cpx #$12c0	        CPX #(NUM_COLS * NUM_ROWS)
.0e0126	d0 ee		bne $0e0116	        BNE -
.0e0128	a2 00 00	ldx #$0000	        LDX #0
.0e012b	a0 00 00	ldy #$0000	        LDY #0
.0e012e	22 84 10 00	jsl $001084	        JSL LOCATE
.0e0132	60		rts		            RTS
.0e0133					SETUP:
.0e0133	18		clc		        CLC                         ; Make sure we're native mode
.0e0134	fb		xce		        XCE
.0e0135	e2 20		sep #$20	            SEP #$20
.0e0137	c2 10		rep #$10	            REP #$10
.0e0139	a9 20		lda #$20	        LDA #TEXT_COLOR            ; Set the Text Color (Green Text on Black Background)
.0e013b	8f 1e 00 00	sta $00001e	        STA @lCUR_COLOR             ; @l forces 24 bit addressing mode...
.0e013f	a9 00		lda #$00	        LDA #$00                    ; Set to No Border
.0e0141	8f 04 00 af	sta $af0004	        STA @lBORDER_CTRL_REG
.0e0145	22 2c 11 00	jsl $00112c	        JSL FK_SETSIZES
.0e0149	20 0f 01	jsr $0e010f	            JSR RESET_SCREEN
.0e014c	60		rts		            RTS

;******  Return to file: .\Heap\Heap.asm


;******  Processing file: .\Heap\HeapManager.asm

=$a0					ZP_HEAP_MANAGER_HEADER_POINTER = $A0
=$a3					ZP_HEAP_MANAGER_BLOCK_POINTER  = $A3
.0000					HEAP_MANAGER_HEADER
>0000					    HEAP_MANAGER_START      .long ?
>0003					    HEAP_MANAGER_END        .long ?
>0006					    HEAP_TOTAL_SIZE         .word ?
>0008					    HEAP_FIRST_BLOCK_HEADER .long ?
>000b					    CURRENT_BLOCK_HEADER    .long ?
.0000					HEAP_MANAGER_BLOCK_HEADER
>0000					    PREV_BLOCK_HEADER       .word ?
>0002					    NEXT_BLOCK_HEADER       .word ?
>0004					    REFERENCE_COUNT         .word ?
>0006					    DATA_SIZE               .word ?
.0e014d					HEAP_MANAGER_INIT
.0e014d	20 de 01	jsr $0e01de	            JSR HEAP_MANAGER_SETUP_ZP_HEADER_POINTER
.0e0150	e2 20		sep #$20	            SEP #$20
.0e0152	85 a5		sta $a5		    STA ZP_HEAP_MANAGER_BLOCK_POINTER + 2
.0e0154	c2 20		rep #$20	            REP #$20
.0e0156	8a		txa		    TXA
.0e0157	18		clc		    CLC
.0e0158	69 0e 00	adc #$000e	    ADC #SIZE(HEAP_MANAGER_HEADER)
.0e015b	85 a3		sta $a3		    STA ZP_HEAP_MANAGER_BLOCK_POINTER
.0e015d	c2 20		rep #$20	            REP #$20
.0e015f	98		tya		    TYA
.0e0160	aa		tax		    TAX
.0e0161	a5 a0		lda $a0		    LDA ZP_HEAP_MANAGER_HEADER_POINTER
.0e0163	a0 00 00	ldy #$0000	    LDY #HEAP_MANAGER_HEADER.HEAP_MANAGER_START
.0e0166	97 a0		sta [$a0],y	    STA [ZP_HEAP_MANAGER_HEADER_POINTER], Y
.0e0168	c8		iny		    INY
.0e0169	c8		iny		    INY
.0e016a	a5 a2		lda $a2		    LDA ZP_HEAP_MANAGER_HEADER_POINTER + 2
.0e016c	97 a0		sta [$a0],y	    STA [ZP_HEAP_MANAGER_HEADER_POINTER], Y
.0e016e	8a		txa		    TXA
.0e016f	a0 03 00	ldy #$0003	    LDY #HEAP_MANAGER_HEADER.HEAP_MANAGER_END
.0e0172	97 a0		sta [$a0],y	    STA [ZP_HEAP_MANAGER_HEADER_POINTER], Y
.0e0174	c8		iny		    INY
.0e0175	c8		iny		    INY
.0e0176	a5 a2		lda $a2		    LDA ZP_HEAP_MANAGER_HEADER_POINTER + 2
.0e0178	97 a0		sta [$a0],y	    STA [ZP_HEAP_MANAGER_HEADER_POINTER], Y
.0e017a	a0 03 00	ldy #$0003	    LDY #HEAP_MANAGER_HEADER.HEAP_MANAGER_END
.0e017d	b7 a0		lda [$a0],y	    LDA [ZP_HEAP_MANAGER_HEADER_POINTER], Y
.0e017f	a0 00 00	ldy #$0000	    LDY #HEAP_MANAGER_HEADER.HEAP_MANAGER_START
.0e0182	38		sec		    SEC
.0e0183	e9 0e 00	sbc #$000e	    SBC #SIZE(HEAP_MANAGER_HEADER)
.0e0186	a0 06 00	ldy #$0006	    LDY #HEAP_MANAGER_HEADER.HEAP_TOTAL_SIZE
.0e0189	97 a0		sta [$a0],y	    STA [ZP_HEAP_MANAGER_HEADER_POINTER], Y
.0e018b	e2 20		sep #$20	            SEP #$20
.0e018d	a0 0a 00	ldy #$000a	    LDY #HEAP_MANAGER_HEADER.HEAP_FIRST_BLOCK_HEADER + 2
.0e0190	a5 a5		lda $a5		    LDA ZP_HEAP_MANAGER_BLOCK_POINTER + 2
.0e0192	97 a0		sta [$a0],y	    STA [ZP_HEAP_MANAGER_HEADER_POINTER], Y
.0e0194	c2 20		rep #$20	            REP #$20
.0e0196	a0 08 00	ldy #$0008	    LDY #HEAP_MANAGER_HEADER.HEAP_FIRST_BLOCK_HEADER
.0e0199	a5 a3		lda $a3		    LDA ZP_HEAP_MANAGER_BLOCK_POINTER
.0e019b	97 a0		sta [$a0],y	    STA [ZP_HEAP_MANAGER_HEADER_POINTER], Y
.0e019d	a9 00 00	lda #$0000	    LDA #0
.0e01a0	a0 00 00	ldy #$0000	    LDY #HEAP_MANAGER_BLOCK_HEADER.PREV_BLOCK_HEADER
.0e01a3	97 a3		sta [$a3],y	    STA [ZP_HEAP_MANAGER_BLOCK_POINTER], Y
.0e01a5	a0 02 00	ldy #$0002	    LDY #HEAP_MANAGER_BLOCK_HEADER.NEXT_BLOCK_HEADER
.0e01a8	97 a3		sta [$a3],y	    STA [ZP_HEAP_MANAGER_BLOCK_POINTER], Y
.0e01aa	a0 04 00	ldy #$0004	    LDY #HEAP_MANAGER_BLOCK_HEADER.REFERENCE_COUNT
.0e01ad	97 a3		sta [$a3],y	    STA [ZP_HEAP_MANAGER_BLOCK_POINTER], Y
.0e01af	a0 06 00	ldy #$0006	    LDY #HEAP_MANAGER_HEADER.HEAP_TOTAL_SIZE
.0e01b2	b7 a0		lda [$a0],y	    LDA [ZP_HEAP_MANAGER_HEADER_POINTER], Y
.0e01b4	a0 06 00	ldy #$0006	    LDY #HEAP_MANAGER_BLOCK_HEADER.DATA_SIZE
.0e01b7	38		sec		    SEC
.0e01b8	e9 08 00	sbc #$0008	    SBC #SIZE(HEAP_MANAGER_BLOCK_HEADER)
.0e01bb	97 a3		sta [$a3],y	    STA [ZP_HEAP_MANAGER_BLOCK_POINTER], Y
.0e01bd	60		rts		            RTS
.0e01be					HEAP_MANAGER_RESET_CURRENT_BLOCK
.0e01be	20 de 01	jsr $0e01de	            JSR HEAP_MANAGER_SETUP_ZP_HEADER_POINTER
.0e01c1	c2 30		rep #$30	            REP #$30
.0e01c3	a0 08 00	ldy #$0008	    LDY #HEAP_MANAGER_HEADER.HEAP_FIRST_BLOCK_HEADER
.0e01c6	b7 a0		lda [$a0],y	    LDA [ZP_HEAP_MANAGER_HEADER_POINTER], Y
.0e01c8	85 a3		sta $a3		    STA ZP_HEAP_MANAGER_BLOCK_POINTER
.0e01ca	a0 0b 00	ldy #$000b	    LDY #HEAP_MANAGER_HEADER.CURRENT_BLOCK_HEADER
.0e01cd	97 a0		sta [$a0],y	    STA [ZP_HEAP_MANAGER_HEADER_POINTER], Y
.0e01cf	e2 20		sep #$20	            SEP #$20
.0e01d1	a0 0a 00	ldy #$000a	    LDY #HEAP_MANAGER_HEADER.HEAP_FIRST_BLOCK_HEADER + 2
.0e01d4	b7 a0		lda [$a0],y	    LDA [ZP_HEAP_MANAGER_HEADER_POINTER], Y
.0e01d6	85 a5		sta $a5		    STA ZP_HEAP_MANAGER_BLOCK_POINTER + 2
.0e01d8	a0 0d 00	ldy #$000d	    LDY #HEAP_MANAGER_HEADER.CURRENT_BLOCK_HEADER + 2
.0e01db	97 a0		sta [$a0],y	    STA [ZP_HEAP_MANAGER_HEADER_POINTER], Y
.0e01dd	60		rts		            RTS
.0e01de					HEAP_MANAGER_SETUP_ZP_HEADER_POINTER
.0e01de	48		pha		    PHA
.0e01df	08		php		    PHP
.0e01e0	e2 20		sep #$20	            SEP #$20
.0e01e2	85 a2		sta $a2		    STA ZP_HEAP_MANAGER_HEADER_POINTER + 2
.0e01e4	c2 20		rep #$20	            REP #$20
.0e01e6	8a		txa		    TXA
.0e01e7	85 a0		sta $a0		    STA ZP_HEAP_MANAGER_HEADER_POINTER
.0e01e9	28		plp		    PLP
.0e01ea	68		pla		    PLA
.0e01eb	60		rts		            RTS

;******  Return to file: .\Heap\Heap.asm

>0e01ec	48 65 61 70 4d 61 6e 61		MSG_WELCOME:                        .NULL "HeapManager Unit Tests Ready", 13
>0e01f4	67 65 72 20 55 6e 69 74 20 54 65 73 74 73 20 52
>0e0204	65 61 64 79 0d 00
>0e020a	55 4e 49 54 5f 54 45 53		MSG_UNIT_TEST_HEAP_MANAGER_INIT:    .NULL "UNIT_TEST_HEAP_MANAGER_INIT "
>0e0212	54 5f 48 45 41 50 5f 4d 41 4e 41 47 45 52 5f 49
>0e0222	4e 49 54 20 00
>0e0227	55 4e 49 54 5f 54 45 53		MSG_UNIT_TEST_HEAP_MANAGER_RESET_CURRENT_BLOCK: .NULL "UNIT_TEST_HEAP_MANAGER_RESET_CURRENT_BLOCK "
>0e022f	54 5f 48 45 41 50 5f 4d 41 4e 41 47 45 52 5f 52
>0e023f	45 53 45 54 5f 43 55 52 52 45 4e 54 5f 42 4c 4f
>0e024f	43 4b 20 00
>0e0253	50 61 73 73 65 64 0d 00		MSG_PASSED:                         .NULL "Passed", 13
>0e025b	46 61 69 6c 65 64 0d 00		MSG_FAILED:                         .NULL "Failed", 13
>0e0263					MY_HEAP_MANAGER .long ?

;******  End of listing
